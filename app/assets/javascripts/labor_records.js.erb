function EmployeeAmounts(employee_id) {
  this.employee_id = employee_id;

  this.getRates = function(hours) {
    $.get("/employees/" + this.employee_id + "/rates", function( response ) {
      // put employee current hours for the month
      // ohwait but we need to tell it which month lmoa
      var before = response.exclusive_rate * hours;
      var after = response.inclusive_rate * hours;
      $("#labor_record_total_before").val(before.toFixed(2));
      $("#labor_record_total_after").val(after.toFixed(2));
    });
  }
}

function update_fields() {
  var id = $("#labor_record_employee_id").val();
  var hrs = $("#labor_record_hours").val();

  var date = $("#labor_record_date").val();
  if (/^\d{4}\-\d{2}-\d{2}$/g.test(date) == true ) {
    // We only do a simple test on the date format so that we don't completely
    // waste the server's time. However, this date is going to be sent to the
    // server to first check if it's an actual correct date, and then
    // to determine what its overtime hours for the month is.
    // We could do the overtime hours calculation in Javascript, but
    // then we'd have to install Moment.js or something similar to make sure
    // that the date is correct.
    // to be honest, though, I don't really know how to check if a date is correct
    // with Ruby either xD rip

  }

  if (Number.isInteger(parseInt(id)) && !(isNaN(parseFloat(hrs)))) {
    var empAmts = new EmployeeAmounts(id, parseFloat(hrs));
    empAmts.getRates(hrs);
  }
}

$(document).ready(function() {

  $('#labor_record_hours').change(function() {
    var inputHours = $('#labor_record_hours').val();
    if ( !(isNaN(inputHours))) {
      update_fields();
    }

  });

  $('#labor_record_employee_id').change(function() {
    var inputId = $('#labor_record_employee_id').val();
    if(Number.isInteger(parseInt(inputId))) {
      update_fields();
    }
  });
});
